@page "/"
@using BlazorApp.Services
@using BlazorApp.Models
@inject ICustomerService CustomerService

<TelerikGrid Data=@Customers EditMode="@GridEditMode.Inline" Pageable="true" Height="500px" 
             TotalCount="(int)Total" PageSize="5" OnRead="@ReadItems"
             OnUpdate="@UpdateHandler"  OnDelete="@DeleteHandler" OnCreate="@CreateHandler" >
    <GridToolBar>
        <GridCommandButton Command="Add" Icon="add">Create New</GridCommandButton>
    </GridToolBar>
    <GridColumns>
        <GridColumn Field="@(nameof(Customer.ContactName))" Title="ContactName" Groupable="false" />
        <GridColumn Field="@(nameof(Customer.CompanyName))" Title="CompanyName" />
        <GridColumn Field="@(nameof(Customer.Address))" Title="Address" />
        <GridColumn Field="@(nameof(Customer.City))" Title="City" />
        <GridColumn Field="@(nameof(Customer.Country))" Title="Country" />
        <GridColumn Field="@(nameof(Customer.Phone))" Title="Phone" />
        <GridColumn Field="@(nameof(Customer.PostalCode))" Title="PostalCode" />
        <GridColumn Field="@(nameof(Customer.Region))" Title="Region" />
        <GridCommandColumn>
            <GridCommandButton Command="Save" Icon="save" ShowInEdit="true">Update</GridCommandButton>
            <GridCommandButton Command="Edit" Icon="edit">Edit</GridCommandButton>
            <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>
            <GridCommandButton Command="Cancel" Icon="cancel" ShowInEdit="true">Cancel</GridCommandButton>
        </GridCommandColumn>
    </GridColumns>
</TelerikGrid>



@code {




    List<Customer> Customers;
    long Total;
    protected async Task ReadItems(GridReadEventArgs args)
    {

        Customers =  await CustomerService.GetPaged(args.Request.Page - 1, args.Request.PageSize);
        Total = await CustomerService.GetCustomerCount();
        StateHasChanged();
    }

   

    public async Task UpdateHandler(GridCommandEventArgs args)
    {


        Customer item = (Customer)args.Item;
        await CustomerService.Update(item.Id, item);

    }

    public async Task DeleteHandler(GridCommandEventArgs args)
    {


        Customer item = (Customer)args.Item;
        await CustomerService.Remove(item.Id);
        //Customers.Remove(item);
    }

    public async Task CreateHandler(GridCommandEventArgs args)
    {


        Customer item = (Customer)args.Item;
        await CustomerService.Create(item);

        //Customers.Insert(0, item);
    }

    





}