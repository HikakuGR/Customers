@page "/fetchdata"
@using BlazorApp.Services
@using BlazorApp.Models

@inject CustomerService CustomerService

<h1>Customers</h1>



@if (Customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>
        <a href="/CreateCustomer">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>ContactName</th>
                <th>Address</th>
                <th>CompanyName</th>
                <th>Country</th>
                <th>Phone</th>
                <th>PostalCode</th>
                <th>Region</th>
                <th>City</th>                
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
            <tr>
                <td>@customer.ContactName</td>
                <td>@customer.Address</td>
                <td>@customer.CompanyName</td>
                <td>@customer.Country</td>
                <td>@customer.Phone</td>
                <td>@customer.PostalCode</td>
                <td>@customer.Region</td>
                <td>@customer.City</td>
                <td>
                    <a href='/EditCustomer/@customer.Id'>Edit</a>  
                    <a href='/DeleteCustomer/@customer.Id'>Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    //private WeatherForecast[] forecasts;
    private IEnumerable<Customer> Customers;

    protected override async Task OnInitializedAsync()
    {
        Customers = CustomerService.Get();
        //forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
