@page "/CustomersTable"
@using BlazorApp.Services
@using BlazorApp.Models

@inject ICustomerService CustomerService

<h1>Customers</h1>



@if (Customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>
        <a href="/CreateCustomer">Create New</a>
    </p>

    <div class="container">
        <div class="row align-items-start borders">
            <div class="col-1">
                Name
            </div>
            <div class="col-1">
                Address
            </div>
            <div class="col-2">
                CompanyName
            </div>
            <div class="col-1">
                Country
            </div>
            <div class="col-2">
                Phone
            </div>
            <div class="col-1">
                PostalCode
            </div>
            <div class="col-1">
                Region
            </div>
            <div class="col-2">
                City
            </div>
            <div class="col-1">
                Controls
            </div>
        </div>
        @foreach (var customer in Customers)
        {
            <div class="row  align-items-start">
                <div class="col-1">
                    @customer.ContactName
                </div>
                <div class="col-1">
                    @customer.Address
                </div>
                <div class="col-2">
                    @customer.CompanyName
                </div>
                <div class="col-1">
                    @customer.Country
                </div>
                <div class="col-2">
                    @customer.Phone
                </div>
                <div class="col-1">
                    @customer.PostalCode
                </div>
                <div class="col-1">
                    @customer.Region
                </div>
                <div class="col-2">
                    @customer.City
                </div>
                <div class="col my-col">
                    <a href='/EditCustomer/@customer.Id'>Edit</a>
                    <a href='/DeleteCustomer/@customer.Id'>Delete</a>
                </div>
            </div>

        }
    <label bind="nav">@(currentPage )/@((total/pageSize))</label>

        
        <nav aria-label="Page navigation">
            <ul class="pagination ">
                <li @onclick="@(() => Previous())"
                    style="cursor:pointer"
                    class="page-item @(currentPage== 1 ? "disabled" : null) ">
                    <span class="page-link">Previous</span>
                </li>
                <li class="page-item @(currentPage == 1 || currentPage == 2 ? "hidden" : null)" @onclick="@(() => SelectedPage(currentPage-2))" ><span class="page-link">@(currentPage - 2)</span></li>
                <li class="page-item @(currentPage == 1  ? "hidden" : null)" @onclick="@(() => SelectedPage(currentPage-1))"><span class="page-link">@(currentPage - 1)</span></li>
                <li class="page-item active" @onclick="@(() => SelectedPage(currentPage))"><span class="page-link">@currentPage</span></li>
                <li class="page-item @(currentPage == (total/pageSize)  ? "hidden" : null)" @onclick="@(() => SelectedPage(currentPage+1))"><span class="page-link">@(currentPage + 1)</span></li>
                <li class="page-item @(currentPage == (total/pageSize) || currentPage == (total/pageSize)-1? "hidden" : null)" @onclick="@(() => SelectedPage(currentPage+2))"><span class="page-link">@(currentPage + 2)</span></li>
                <li @onclick="@(() => Next())"
                    style="cursor:pointer"
                    class="page-item @(currentPage==(total/pageSize) ? "disabled" : null) ">
                    <span class="page-link">Next</span>
                </li>
            </ul>
        </nav>
    </div>
    @*<table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>ContactName</th>
                    <th>Address</th>
                    <th>CompanyName</th>
                    <th>Country</th>
                    <th>Phone</th>
                    <th>PostalCode</th>
                    <th>Region</th>
                    <th>City</th>
                    <th>Controls</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Customers)
                {
                <tr>
                    <td>@customer.ContactName</td>
                    <td>@customer.Address</td>
                    <td>@customer.CompanyName</td>
                    <td>@customer.Country</td>
                    <td>@customer.Phone</td>
                    <td>@customer.PostalCode</td>
                    <td>@customer.Region</td>
                    <td>@customer.City</td>
                    <td>
                        <a href='/EditCustomer/@customer.Id'>Edit</a>
                        <a href='/DeleteCustomer/@customer.Id'>Delete</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>*@
}

@code {

    private List<Customer> Customers;
    private int currentPage = 1;
    private int pageSize = 10;
    private long total = 0;

    async Task LoadCustomers(int page=1, int pageSize =10)
    {
        Customers = await CustomerService.GetPaged(page, pageSize);
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadCustomers(currentPage, pageSize);
        //Customers = await CustomerService.GetPaged(0, pageSize);
        total = await CustomerService.GetCustomerCount();

    }

    private async Task Next()
    {
        currentPage++;
        await LoadCustomers(currentPage, pageSize);
        //Customers = await CustomerService.GetPaged(currentPage, pageSize);

    }

    private async Task Previous()
    {
        currentPage--;
        await LoadCustomers(currentPage, pageSize);
        //Customers = await CustomerService.GetPaged(currentPage, pageSize);
    }

    private async Task SelectedPage(int page)
    {
        currentPage = page;
        await LoadCustomers(currentPage, pageSize);

        

    }
}
